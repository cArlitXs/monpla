{"version":3,"sources":["api/index.js","components/Order.js","components/Product.js","components/Products.js","components/Content.js","components/Header.js","App.js","index.js"],"names":["api","create","baseURL","API","products","getProducts","get","getProduct","id","getProductsByCategory","orders","getOrders","getOrder","postOrder","order","post","categories","getCategories","getCategory","Order","items","handleRemoveItemToOrder","isLoading","className","style","position","top","zIndex","background","width","height","overflow","Spinner","animation","role","length","Alert","variant","ListGroup","map","item","index","Item","Row","Col","xs","sm","md","lg","xl","Button","padding","margin","onClick","title","quantity","disabled","Product","handleAddItemToOrder","useState","show","setShow","handleClose","setQuantity","description","setDescription","Card","as","Body","Title","Modal","onHide","Header","closeButton","Form","onSubmit","e","preventDefault","Group","controlId","Control","type","placeholder","min","value","onChange","target","parseInt","Label","rows","Footer","Products","Content","setIsLoading","showSuccessToast","setShowSuccessToast","showErrorToast","setShowErrorToast","setProducts","setOrder","PostOrder","a","ok","data","useEffect","console","error","message","GetProducts","Toast","onClose","delay","autohide","bottom","left","Container","fluid","newOrder","splice","Navbar","bg","Brand","href","Nav","App","Helmet","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.6f5ae643.chunk.js","sourcesContent":["import { create } from \"apisauce\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst dev = \"http://localhost:3004\";\r\nconst prod = \"https://my-json-server.typicode.com/cArlitXs/monpla\";\r\n\r\nconst api = create({\r\n  baseURL: prod,\r\n});\r\n\r\nconst products = {\r\n  getProducts: () => api.get(\"/products\"),\r\n  getProduct: (id) => api.get(`/products/${id}`),\r\n  getProductsByCategory: (id) => api.get(`/category/${id}/products`),\r\n};\r\n\r\nconst orders = {\r\n  getOrders: () => api.get(\"/orders\"),\r\n  getOrder: (id) => api.get(`/orders/${id}`),\r\n  postOrder: (order) => api.post(`/orders`, order),\r\n};\r\n\r\nconst categories = {\r\n  getCategories: () => api.get(\"/category\"),\r\n  getCategory: (id) => api.get(`/category/${id}`),\r\n};\r\n\r\nconst API = {\r\n  products,\r\n  orders,\r\n  categories,\r\n};\r\n\r\nexport default API;\r\n","import React from \"react\";\r\nimport { Alert, Button, Col, ListGroup, Row, Spinner } from \"react-bootstrap\";\r\nimport { Check, X } from \"react-bootstrap-icons\";\r\n\r\nconst Order = ({ items, handleRemoveItemToOrder, postOrder, isLoading }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"my-2 display-4\">Orden</h1>\r\n      <hr />\r\n      <div\r\n        style={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n        }}\r\n      >\r\n        {isLoading && (\r\n          <div\r\n            style={{\r\n              zIndex: \"99999\",\r\n              position: \"absolute\",\r\n              background: \"rgba(255,255,255,1)\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            <Spinner animation=\"border\" role=\"status\" className=\"m-4\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        )}\r\n        {items.length <= 0 ? (\r\n          <Alert variant=\"info\">No tiene productos en la orden.</Alert>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {items.map((item, index) => (\r\n              <ListGroup.Item key={index}>\r\n                <Row>\r\n                  <Col\r\n                    xs={1}\r\n                    sm={1}\r\n                    md={1}\r\n                    lg={1}\r\n                    xl={1}\r\n                    className=\"text-left p-0 m-0\"\r\n                  >\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      style={{\r\n                        padding: \"0\",\r\n                        margin: \"0\",\r\n                        width: \"2em\",\r\n                        height: \"2em\",\r\n                      }}\r\n                      onClick={() => handleRemoveItemToOrder(index)}\r\n                    >\r\n                      <X />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col>{item.item.title}</Col>\r\n                  <Col\r\n                    xs={2}\r\n                    sm={2}\r\n                    md={2}\r\n                    lg={2}\r\n                    xl={2}\r\n                    className=\"text-right p-0 m-0\"\r\n                  >\r\n                    {item.item.quantity}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n        <Row>\r\n          <Col className=\"text-right my-2\">\r\n            {!isLoading && (\r\n              <Button\r\n                variant=\"success\"\r\n                disabled={items.length <= 0}\r\n                onClick={postOrder}\r\n              >\r\n                <Check /> Completar la orden\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Card, Col, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { Dash, Plus, Save, X } from \"react-bootstrap-icons\";\r\n\r\nconst Product = ({ item, handleAddItemToOrder, isLoading }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const handleMoreQuantity = () => setQuantity(quantity + 1);\r\n  const handleMinusQuantity = () =>\r\n    setQuantity(quantity <= 1 ? 1 : quantity - 1);\r\n\r\n  const handleChangeQuantity = (e) =>\r\n    setQuantity(\r\n      e.target.value === \"\"\r\n        ? 1\r\n        : parseInt(e.target.value) <= 1\r\n        ? 1\r\n        : parseInt(e.target.value)\r\n    );\r\n\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const handleChangeDescription = (e) => setDescription(e.target.value);\r\n\r\n  const handleAddProductToOrder = () => {\r\n    handleAddItemToOrder({\r\n      id: item.id,\r\n      title: item.title,\r\n      quantity: quantity,\r\n      description: description,\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        as={Button}\r\n        disabled={isLoading}\r\n        variant=\"light\"\r\n        className=\"w-100 m-1\"\r\n        onClick={handleShow}\r\n      >\r\n        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n        <Card.Body>\r\n          <Card.Title>{item.title}</Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{item.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={(e) => e.preventDefault()}>\r\n            <Row xs={3} sm={3} md={3} lg={3} xl={3}>\r\n              <Col>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  className=\"w-100\"\r\n                  onClick={handleMinusQuantity}\r\n                >\r\n                  <Dash />\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId=\"cantidad\">\r\n                  <Form.Control\r\n                    className=\"text-center\"\r\n                    type=\"number\"\r\n                    placeholder=\"Cantidad...\"\r\n                    min={1}\r\n                    value={quantity}\r\n                    onChange={handleChangeQuantity}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"w-100\"\r\n                  onClick={handleMoreQuantity}\r\n                >\r\n                  <Plus />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Form.Group controlId=\"descripcion\">\r\n              <Form.Label>Descripción</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                placeholder=\"Escriba aquí si lo necesita...\"\r\n                value={description}\r\n                onChange={handleChangeDescription}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            <X />\r\n            Cancelar\r\n          </Button>\r\n          <Button variant=\"success\" onClick={handleAddProductToOrder}>\r\n            <Save /> Guardar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport { Col, Row, Spinner } from \"react-bootstrap\";\r\nimport Product from \"./Product\";\r\n\r\nconst Products = ({ items, handleAddItemToOrder, isLoading }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"my-2 display-4\">Lista de productos</h1>\r\n      <hr />\r\n      {items.length <= 0 ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <Row xs={1} sm={2} md={3} lg={4} xl={4}>\r\n          {items.map((item, index) => (\r\n            <Col key={index}>\r\n              <Product\r\n                item={item}\r\n                handleAddItemToOrder={handleAddItemToOrder}\r\n                isLoading={isLoading}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row, Toast } from \"react-bootstrap\";\r\nimport API from \"../api\";\r\nimport Order from \"./Order\";\r\nimport Products from \"./Products\";\r\n\r\nconst Content = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showSuccessToast, setShowSuccessToast] = useState(false);\r\n  const [showErrorToast, setShowErrorToast] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [order, setOrder] = useState([]);\r\n\r\n  const handleAddItemToOrder = (item) => setOrder([...order, { item }]);\r\n  const handleRemoveItemToOrder = (index) => {\r\n    const newOrder = [...order];\r\n    newOrder.splice(index, 1);\r\n    setOrder(newOrder);\r\n  };\r\n\r\n  const PostOrder = async () => {\r\n    setIsLoading(true);\r\n    // eslint-disable-next-line no-unused-vars\r\n    const { ok, data } = await API.orders.postOrder({ products: order });\r\n    if (ok) {\r\n      setOrder([]);\r\n      setIsLoading(false);\r\n      setShowSuccessToast(true);\r\n    } else {\r\n      setIsLoading(false);\r\n      setShowErrorToast(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const GetProducts = async () => {\r\n      const { ok, data } = await API.products.getProducts();\r\n      if (!ok) console.error(ok.message);\r\n      setProducts(data);\r\n    };\r\n    GetProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Toast\r\n        onClose={() => setShowSuccessToast(false)}\r\n        show={showSuccessToast}\r\n        delay={5000}\r\n        autohide\r\n        className=\"border border-success\"\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"1em\",\r\n          left: \"1em\",\r\n          width: \"320px\",\r\n        }}\r\n      >\r\n        <Toast.Header>\r\n          <strong className=\"mr-auto\">¡Completado!</strong>\r\n          <small>Ahora mismo</small>\r\n        </Toast.Header>\r\n        <Toast.Body>Orden realizada con éxito.</Toast.Body>\r\n      </Toast>\r\n      <Toast\r\n        onClose={() => setShowErrorToast(false)}\r\n        show={showErrorToast}\r\n        delay={5000}\r\n        autohide\r\n        className=\"border border-danger\"\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"1em\",\r\n          left: \"1em\",\r\n          width: \"320px\",\r\n        }}\r\n      >\r\n        <Toast.Header>\r\n          <strong className=\"mr-auto\">¡Algo ha ido mal!</strong>\r\n          <small>Ahora mismo</small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          La orden no se ha podido procesar, inténtelo nuevamente.\r\n        </Toast.Body>\r\n      </Toast>\r\n      <Container fluid>\r\n        <Row xs={1} sm={1} md={2} lg={2} xl={2}>\r\n          <Col xs={12} sm={4} md={3} lg={3} xl={3}>\r\n            <Order\r\n              items={order}\r\n              handleRemoveItemToOrder={handleRemoveItemToOrder}\r\n              postOrder={PostOrder}\r\n              isLoading={isLoading}\r\n            />\r\n          </Col>\r\n          <Col xs={12} sm={8} md={9} lg={9} xl={9}>\r\n            <Products\r\n              items={products}\r\n              handleAddItemToOrder={handleAddItemToOrder}\r\n              isLoading={isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">{title}</Navbar.Brand>\r\n        <Nav className=\"mr-auto\"></Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Helmet } from \"react-helmet\";\nimport Content from \"./components/Content\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const title = \"Monpla\";\n  return (\n    <div>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <Header title={title} />\n      <Content />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootswatch/dist/lux/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}